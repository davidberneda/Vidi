// Declaring an interface, it is just a simple class:

// 1) With No variables
// 2) With No methods with content
// 3) If there is an ancestor, it should also follow 1 and 2.


// interface
Sport {
  Score(Points : Integer) {}
}

// Declare a class to implement this interface (hard mode)

Basket is Sport {

  // implement 
  Score(Points : Integer) {
    Console.PutLine('New basket: ',Points)
  }
}

// Declare another class implementing this interface (soft mode)

Football {

  // it simply matches the signature 
  Score(Points : Integer) {
    Console.PutLine('New goal: ',Points)
  }
}

// An example of a method using the interface

DoScore(S:Sport, Amount:Integer) {
  S.Score(Amount)
}

// Example of use:

{
  B : Basket  // hard-mode

  // Using the interface as a variable
  
  S : Sport := B
  S.Score(123)

  // Passing to a method expecting the interface

  DoScore(B,45)

  // Using the soft interface

// TODO: Auto-discover if F is soft-compatible with Sport interface

//F : Football

//S := F 
//DoScore(S,3)
}

//OUT: New basket: 123^
//OUT: New basket 45^
//OUT: New goal: 3^

